import pandas as pd
from sqlalchemy import create_engine
import urllib

# MS SQL connection (source)
mssql_conn_str = (
    "Driver={ODBC Driver 17 for SQL Server};"
    "Server=DESKTOP-6B6KT5K;"
    "Database=cryptodb;"
    "Trusted_Connection=yes;"
)
mssql_engine = create_engine(f"mssql+pyodbc:///?odbc_connect={urllib.parse.quote_plus(mssql_conn_str)}")

# MySQL connection (target)
mysql_engine = create_engine(
    "mysql+pymysql://root:thinknyx%40123@localhost/CompanyDB"
)

# Query with chunking from MS SQL
query = "SELECT * FROM crypto_data"
chunksize = 10000

for chunk in pd.read_sql(query, mssql_engine, chunksize=chunksize):
    # --- Transformations ---
    
    # 1. IQR-based Price Categorization
    q1 = chunk["current_price"].quantile(0.25)
    q3 = chunk["current_price"].quantile(0.75)
    iqr = q3 - q1
    
    lower_bound = q1 - 1.5 * iqr
    upper_bound = q3 + 1.5 * iqr
    
    def categorize_price(p):
        if p < lower_bound:
            return "Low"
        elif p > upper_bound:
            return "High"
        else:
            return "Medium"
    
    chunk["price_category"] = chunk["current_price"].apply(categorize_price)
    
    # 2. Market Dominance %
    total_market_cap = chunk["market_cap"].sum()
    chunk["market_dominance_pct"] = chunk["market_cap"] / total_market_cap * 100
    chunk["market_dominance_pct"] = chunk["market_dominance_pct"].round(2)
    
    # --- Load into MySQL ---
    chunk.to_sql("crypto_data", mysql_engine, if_exists="append", index=False)
    print(f"Migrated {len(chunk)} rows...")
